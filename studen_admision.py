# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nN7cqxY9rP_L-xvzv304v7nRVhQYdXEa
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import joblib

data = pd.read_csv('/content/Admission_Predict.csv')

data = data.drop(['Serial No.'], axis=1)


data.isnull().sum()
# load the data

data = pd.read_csv('/content/Admission_Predict.csv')

data = data.drop(['Serial No.'], axis=1)

data.isnull().sum()

# separate dependent and independent variables

x = data.drop(['Research'],axis=1)
y = data['Research']

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

linear_model = LogisticRegression()
linear_model.fit(x_train,y_train)

# prediction on test data
y_pred = linear_model.predict(x_test)
# evaluate the performance of our model
score = accuracy_score(y_test,y_pred)
print('Accuray:',score * 100)

# prediction on new data
new_data = pd.DataFrame({
    'GRE Score': [337],
    'TOEFL Score':[118],
    'University Rating':[3],
    'SOP':[3.5],
    'LOR ': [3.0],
    'CGPA': [9.65],
    'Chance of Admit ':  [0.75]
}, index=[0])


# the probability test
# Probability test
prediction_prob = linear_model.predict(new_data)
probability = linear_model.predict_proba(new_data)


# display
print('Predictions: ', prediction_prob)
print('Probabilities: ', probability)


#  save the model using joblib
joblib.dump(linear_model,'student_admission_model')

# let's load our model
student_model = joblib.load('student_admission_model')

print(student_model.predict(new_data))





